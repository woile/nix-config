{
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "One Dark"
  },
  "git_panel": {
    "dock": "right"
  },
  "collaboration_panel": {
    "dock": "left"
  },
  "notification_panel": {
    "dock": "left"
  },
  "outline_panel": {
    "dock": "right"
  },
  "features": {
    "edit_prediction_provider": "zed"
  },
  "language_models": {
    "ollama": {
      "api_url": "http://localhost:11434",
      "available_models": [
        {
          "name": "hf.co/bartowski/zed-industries_zeta-GGUF:Q5_K_M",
          "display_name": "zeta-8b",
          "max_tokens": 11264
        },
        {
          "name": "qwen2.5-coder",
          "display_name": "qwen 2.5 coder 32K",
          "max_tokens": 11264
        },
        {
          "name": "hf.co/unsloth/Qwen3-8B-GGUF:Q4_K_XL",
          "display_name": "qwen3:8b",
          "max_tokens": 11264,
          "supports_tools": true
        }
      ]
    }
  },

  "assistant": {
    "enabled": true,
    "default_model": {
      "provider": "google",
      "model": "gemini-2.5-flash-preview-04-17"
    },
    "inline_assistant_model": {
      "provider": "ollama",
      "model": "hf.co/bartowski/zed-industries_zeta-GGUF:Q5_K_M"
    },
    "commit_message_model": {
      "provider": "ollama",
      "model": "hf.co/bartowski/zed-industries_zeta-GGUF:Q5_K_M"
    },
    "dock": "left"
  },
  "auto_update": false,
  "load_direnv": "shell_hook",
  "base_keymap": "VSCode",
  "show_whitespaces": "all",
  "project_panel": {
    "dock": "right"
  },
  "inlay_hints": {
    "enabled": true,
    "show_background": false,
    "show_other_hints": true,
    "show_parameter_hints": true,
    "show_type_hints": true
  },
  "journal": {
    "hour_format": "hour24"
  },

  "lsp": {
    "nixd": {
      "binary": {
        "path": "nixd"
      }
    },
    "slint-lsp": {
      "cached_binary_path": "slint-lsp",
      "cached_binary": {
        "path": "slint-lsp"
      },
      "binary": {
        "path": "slint-lsp"
      }
    },
    "rust-analyzer": {
      "binary": {
        "path": "/run/current-system/sw/bin/bash",
        "arguments": [
          "-c",
          "if [ -e flake.nix ]; then nix develop --command rust-analyzer; else rust-analyzer; fi"
        ]
      }
    },
    "package-version-server": {
      "binary": {
        "path": "package-version-server"
      }
    }
  },

  "languages": {
    "Nix": {
      "formatter": {
        "external": {
          "arguments": [],
          "command": "nixfmt"
        }
      }
    }
  }
}
