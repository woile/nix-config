# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "thunderbolt"
    "uas"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "amd_pstate=active" ];
  boot.kernel.sysctl."kernel.sysrq" = 502;
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/4c3a7767-2d19-421b-be66-e2fda9ce9b3d";
    fsType = "btrfs";
    options = [ "subvol=@" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/8103-D61A";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/42343ad5-a411-4314-8f1f-c14f69b5a458"; }
  ];

  ## Attempts at fixing OOM issues
  zramSwap.enable = true;
  systemd.oomd.enableUserSlices = true;

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Enable the Nvidia card, as well as Prime and Offload
  # hardware.amdgpu.initrd.enable = true;

  # Nvidia secondary graphics
  hardware.graphics.enable = true;

  services.xserver.videoDrivers = [ "nvidia" ];
  hardware.nvidia = {

    # fix for kernel 6.13 5/02/2024
    # package = config.boot.kernelPackages.nvidiaPackages.mkDriver {
    #   version = "570.133.07"; # use new 570 drivers
    #   sha256_64bit = "sha256-LUPmTFgb5e9VTemIixqpADfvbUX1QoTT2dztwI3E3CY=";
    #   openSha256 = "sha256-DuVNA63+pJ8IB7Tw2gM4HbwlOh1bcDg2AN2mbEU9VPE=";
    #   settingsSha256 = "sha256-9rtqh64TyhDF5fFAYiWl3oDHzKJqyOW3abpcf2iNRT8=";
    #   usePersistenced = false;
    # };
    package = config.boot.kernelPackages.nvidiaPackages.latest;
    # Use proprietary drivers
    open = true;

    # Enable the NVIDIA kernel module
    modesetting.enable = true;
    nvidiaSettings = true;

    # Enable runtime power management
    prime = {

      offload = {
        enable = true;
        enableOffloadCmd = true;
      };
      nvidiaBusId = "PCI:1:0:0";
      amdgpuBusId = "PCI:63:0:0";
    };

    powerManagement = {
      enable = true;
      finegrained = false;
    };

  };

}
